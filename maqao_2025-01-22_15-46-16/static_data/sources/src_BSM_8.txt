/fsx/home/etud9-1/Black-sholes/BSM.cxx: 95 - 105
--------------------------------------------------------------------------------

95:     #pragma omp parallel for reduction(+:sum)
[...]
101:             thread_local static std::mt19937 generator(std::random_device{}());
102:             thread_local static std::normal_distribution<double> distribution(0.0, 1.0);
103:             alignas(32) double Z =  distribution(generator);
104:             if (Z > lnZcompare) {
105:                 sum+= a*exp(lambda* Z)+b; 
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/random.h: 194 - 2073
--------------------------------------------------------------------------------

194: 	                            _Engine>(_M_g);
[...]
2034: 	: _M_mean(__mean), _M_stddev(__stddev)
[...]
2073:       : _M_param(__mean, __stddev)
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/basic_string.h: 639 - 639
--------------------------------------------------------------------------------

639: 	_M_construct(__s, __end, forward_iterator_tag());
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/random.tcc: 1817 - 1839
--------------------------------------------------------------------------------

1817: 	if (_M_saved_available)
1818: 	  {
1819: 	    _M_saved_available = false;
1820: 	    __ret = _M_saved;
[...]
1827: 		__x = result_type(2.0) * __aurng() - 1.0;
1828: 		__y = result_type(2.0) * __aurng() - 1.0;
1829: 		__r2 = __x * __x + __y * __y;
1830: 	      }
1831: 	    while (__r2 > 1.0 || __r2 == 0.0);
1832: 
1833: 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
1834: 	    _M_saved = __x * __mult;
1835: 	    _M_saved_available = true;
1836: 	    __ret = __y * __mult;
1837: 	  }
1838: 
1839: 	__ret = __ret * __param.stddev() + __param.mean();
